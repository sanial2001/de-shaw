    static int solve(int[] A, int[] B, int threshold){
        int n = A.length, max = 0, ans = 0, secMax = 0;
        int[] idx = IntStream.range(0, n).boxed().sorted(Comparator.comparingInt(o -> A[o])).mapToInt(o -> o).toArray();
        for (int i = n-1, j = 0; i >= 0; i--){
            while(j < n && A[idx[i]]+A[idx[j]] <= threshold){
                if (B[idx[j]]>max){
                    secMax=max;
                    max=B[idx[j]];
                }else if (B[idx[j]]>secMax){
                    secMax=B[idx[j]];
                }
                j++;
            }
            if (max > 0 && secMax > 0){
                int val = max==B[idx[i]]?secMax:max;
                ans = Math.max(ans, val + B[idx[i]]);
            }
        }
        return ans;
    }